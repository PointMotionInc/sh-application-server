version: '3.9'
services:
  sh_application_server:
    container_name: application_server
    build:
      context: .
      dockerfile: docker/Local.Dockerfile
    profiles:
      - prod
    environment:
      - ENV_NAME=${APP_ENV_NAME}
      - NEST_SERVER_PORT=${APP_NEST_SERVER_PORT}
      - GQL_API_ENDPOINT=${APP_GQL_API_ENDPOINT}
      - HASURA_QUERY_ENDPOINT=${APP_HASURA_QUERY_ENDPOINT}
      - HASURA_METADATA_ENDPOINT=${APP_HASURA_METADATA_ENDPOINT}
      - GQL_API_ADMIN_SECRET=${APP_GQL_API_ADMIN_SECRET}
      - JWT_SECRET=${APP_JWT_SECRET}
      - APP_SERVER_URL=${APP_SERVER_URL}
      - TWILIO_ACCOUNT_SID=${APP_TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${APP_TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${APP_TWILIO_PHONE_NUMBER}
      - POSTGRES_PORT=${APP_POSTGRES_PORT}
      - POSTGRES_HOST=${APP_POSTGRES_HOST}
      - POSTGRES_USER=${APP_POSTGRES_USER}
      - POSTGRES_DB=${APP_POSTGRES_DB}
      - POSTGRES_PASSWORD=${APP_POSTGRES_PASSWORD}
      - STRIPE_SECRET_KEY=${APP_STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${APP_STRIPE_WEBHOOK_SECRET}
      - NOVU_API_KEY=${APP_NOVU_API_KEY}
      - NOVU_BACKEND_URL=${APP_NOVU_BACKEND_URL}
      - SUPPORT_URL=${APP_SUPPORT_URL}
      - FEEDBACK_URL=${APP_FEEDBACK_URL}
      - SUPPORT_REPLY_TO_EMAIL=${APP_SUPPORT_REPLY_TO_EMAIL}
      - BUILD_VERSION={APP_BUILD_VERSION}
      - BUILD_TIMESTAMP={APP_BUILD_TIMESTAMP}

    restart: unless-stopped
    ports:
      - 9000:9000
    # so that it can connect to Postgres DB & Hasura
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # graphql_engine_prod:
  #   image: 'docker.io/hasura/graphql-engine:latest'
  #   profiles:
  #     - prod
  #   env_file: .env
  #   container_name: graphql-engine
  #   ports:
  #   - "8080:8080"
  #   restart: unless-stopped
  #   # so that it can connect to Postgres DB & NestJS
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   environment:
  #     HASURA_GRAPHQL_DATABASE_URL: postgres://${DEV_DB_USER}:${DEV_DB_PASSWORD}@${DEV_DB_ENDPOINT}:${DEV_DB_PORT}/${DEV_DB_NAME}
  #     HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
  #     HASURA_GRAPHQL_DEV_MODE: "${DEV_HASURA_GRAPHQL_DEV_MODE}"
  #     ACTION_BASE_URL: ${DEV_ACTION_BASE_URL}
  #     HASURA_GRAPHQL_JWT_SECRET: '${DEV_HASURA_GRAPHQL_JWT_SECRET}'
  #     HASURA_GRAPHQL_ADMIN_SECRET: ${DEV_HASURA_GRAPHQL_ADMIN_SECRET}
  #     HASURA_GRAPHQL_UNAUTHORIZED_ROLE: guest
  #     HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
  #   command:
  #   - graphql-engine
  #   - serve

  sh_application_server_local:
    build:
      context: .
      dockerfile: docker/Local.Dockerfile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    container_name: local_app_server
    profiles:
      - local
    env_file: .env
    restart: unless-stopped
    ports:
      - 9000:9000
    # For hot reloading
    volumes:
      - ./:/usr/src/sh-application-server/local
      - ignore://usr/src/sh-application-server/local/node_modules
volumes:
  ignore:
